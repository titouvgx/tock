openapi: "3.0.0"
info:
  description: "This is the Tock NLP ADMIN API. You can manage your model with it!"
  version: "20.9"
  title: "Tock NLP Admin API"
  termsOfService: "https://doc.tock.ai"
  contact:
    name: Contact us on Gitter
    url: https://gitter.im/tockchat/Lobby
  license:
    name: Licence Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://demo.tock.ai/rest/admin
    description: Public demo server
  - url: http://localhost/rest/admin
    description: Local server (default tock-docker implementation)
tags:
  - name: "Application"
    description: "Manage application models"
  - name: "Sentence"
    description: "Manage sentences of the model"
  - name: "Dump"
    description: "Upload model dumps"

schemes:
  - "http"
  - "https"
components:
  securitySchemes:
    basicAuth:     
      type: http
      scheme: basic
security:
  - basicAuth: []
paths:
  /parse:
    post:
      tags:
        - "Sentence"
      summary: "Parse a sentence"
      requestBody:
        description: "Query to be sent with user ID"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/ParseQuery'
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
              schema:
                $ref: "#/definitions/SentenceReport"

  /applications:
    get:
      tags:
        - "Application"
      summary: "Retrieve all applications of the namespace"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/definitions/ApplicationWithIntents"
  /application/{applicationId}:
    get:
      tags:
        - "Application"
      summary: "Retrieve application that matches given identifier"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "applicationId"
          in: "path"
          description: "Application identifier"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
              schema:
                $ref: "#/definitions/ApplicationWithIntents"

    delete:
      tags:
        - "Application"
      summary: "Delete application that matches given identifier"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "applicationId"
          in: "path"
          description: "Application identifier"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"

  /application:
    post:
      tags:
        - "Application"
      summary: "Create or update application"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Application content"
          required: true
          schema:
            $ref: "#/definitions/ApplicationWithIntents"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
              schema:
                $ref: "#/definitions/ApplicationWithIntents"

  /application/dump/{applicationId}:
    get:
      tags:
        - "Application"
      summary: "Retrieve full application dump that matches given identifier"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "applicationId"
          in: "path"
          description: "Application identifier"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
              schema:
                type: "object"

  /application/{applicationId}/intent/{intentId}:
    delete:
      tags:
        - "Application"
      summary: "Remove an intent from an application model. If the intent does not belong to an other model, delete the intent."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "applicationId"
          in: "path"
          description: "Application identifier"
          required: true
          schema:
            type: "string"
        - name: "intentId"
          in: "path"
          description: "Intent identifier"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
              schema:
                type: "object"

  /application/{applicationId}/intent/{intentId}/entity/{entityType}/{role}:
    delete:
      tags:
        - "Application"
      summary: "Remove a entity role from intent of an application model."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "applicationId"
          in: "path"
          description: "Application identifier"
          required: true
          schema:
            type: "string"
        - name: "intentId"
          in: "path"
          description: "Intent identifier"
          required: true
          schema:
            type: "string"
        - name: "entityType"
          in: "path"
          description: "Entity type qualified name"
          required: true
          schema:
            type: "string"
        - name: "role"
          in: "path"
          description: "Role of the entity to remove"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
              schema:
                type: "object"

  /sentences/dump/{dumpType}/{applicationId}/{intent}/{locale}:
    get:
      tags:
        - "Sentence"
      summary: "Retrieve qualified sentences dump that matches given application identifier, intent and locale"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "dumpType"
          in: "path"
          description: "Dump type"
          required: true
          schema:
            type: "string"
            enum: [full, obfuscated]
        - name: "applicationId"
          in: "path"
          description: "Application identifier"
          required: true
          schema:
            type: "string"
        - name: "intent"
          in: "path"
          description: "Intent name"
          required: false
          schema:
            type: "string"
        - name: "locale"
          in: "path"
          description: "Locale"
          required: false
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
              schema:
                type: "object"

  /dump/application:
    post:
      tags:
        - "Dump"
      summary: "Upload a complete application model"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
  /dump/application/{name}:
    post:
      tags:
        - "Dump"
      summary: "Upload complete application dump and set specified name as application name"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      parameters:
        - name: "name"
          in: "path"
          description: "Application name"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"

  /dump/sentences:
    post:
      tags:
        - "Dump"
      summary: "Upload a complete application model [sentences dump format]"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        200:
          content:
            application/json:
              description: "successful operation"
  /dump/sentences/{name}:
    post:
      tags:
        - "Dump"
      summary: "Upload complete application dump [sentences dump format] and set specified name as application name"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      parameters:
        - name: "name"
          in: "path"
          description: "Application name"
          required: true
          schema:
            type: "string"
      responses:
        200:
          content:
            application/json:
              description: "successful operation"

definitions:
  ParseQuery:
    type: "object"
    description: "A sentence-parse query"
    required: [ "query" ]
    properties:
      namespace:
        type: "string"
        description: "The application namespace"
      applicationName:
        type: "string"
        description: "The application name"
      language:
        type: "string"
        description: "The sentence language or locale"
      query:
        type: "string"
        description: "The sentence"
      checkExistingQuery:
        type: "boolean"
        description: "Check already-qualified sentences"
      state:
        type: "string"
        description: "The sentence state"
    example:
      namespace: "app"
      applicationName: "new_assistant"
      language: "fr"
      query: "Bonjour"
      checkExistingQuery: true
      state: null

  ClassifiedEntityReport:
    type: "object"
    description: "An entity classification report"
    properties:
      type:
        type: "string"
        description: "The entity type"
      role:
        type: "string"
        description: "The entity role"
      start:
        type: "integer"
        description: "The entity start index in sentence"
      end:
        type: "integer"
        description: "The entity end index in sentence"
      value:
        type: "string"
        description: "The entity value"
      probability:
        type: "number"
        format: "double"
        description: "The entity probability score"
      subEntities:
        type: "array"
        description: "Sub-entities"
        items:
          $ref: "#/definitions/ClassifiedEntityReport"

  ClassificationReport:
    type: "object"
    description: "A sentence classification report"
    properties:
      intentId:
        type: "string"
        description: "The intent ID"
      entities:
        type: "array"
        description: "The classified entities"
        items:
          $ref: "#/definitions/ClassifiedEntityReport"
      notRetainedEntities:
        type: "array"
        description: "The entities found but not retained"
        items:
          $ref: "#/definitions/ClassifiedEntityReport"
      intentProbability:
        type: "number"
        format: "double"
        description: "The intent probability score"
      entitiesProbability:
        type: "number"
        format: "double"
        description: "The entities average probability score"
      otherIntentsProbabilities:
        type: object
        description: "Other intents with significant probabilities"
        additionalProperties:
          type: "number"
      lastUsage:
        type: "string"
        format: "date-time"
        description: "The sentence last use instant"
      usageCount:
        type: "string"
        description: "The sentence uses count"
      unknownCount:
        type: "string"
        description: "The unknown count for the sentence"

  SentenceReport:
    type: "object"
    required: [ "text", "intentNamespace", "language", "retainedQuery" ]
    properties:
      text:
        type: "string"
        description: "The sentence"
      language:
        type: "string"
        description: "The sentence language"
      applicationId:
        type: "string"
        description: "The application ID"
      creationDate:
        type: "string"
        format: "date-time"
        description: "The sentence creation date"
      updateDate:
        type: "string"
        format: "date-time"
        description: "The sentence update date"
      status:
        type: "string"
        description: "The sentence status"
      classification:
        $ref: "#/definitions/ClassificationReport"
        description: "The sentence classification (intents and entities)"
      key:
        type: "string"
        description: "The key"
      forReview:
        type: "boolean"
        description: "Is the sentence waiting for classification review?"
      reviewComment:
        type: "string"
        description: "The review comment"
      qualifier:
        type: "string"
        description: "The sentence qualifier (user)"

  ApplicationWithIntents:
    type: "object"
    description: "An application with supported intents"
    required: [ "_id", "name", "namespace", "intents", "supportedLocales", "nlpEngineType" ]
    properties:
      _id:
        type: "string"
        description: "The id of the app"
      namespace:
        type: "string"
        description: "The namespace of the application"
      applicationName:
        type: "string"
        description: "The name of the application"
      intents:
        type: "array"
        description: "The intent definitions of the application"
        items:
          $ref: "#/definitions/IntentDefinition"
      supportedLocales:
        type: "array"
        description: "The locales supported by the application"
        items:
          type: "string"
      nlpEngineType:
        type: "object"
        description: "The current nlp engine used to build the model"
        properties:
          name:
            type: "string"
            description: "he unique name of nlp engine"
      mergeEngineTypes:
        type: "boolean"
        description: "Is intent entity model and standalone entity models are used to find the better values ?"
      useEntityModels:
        type: "boolean"
        description: "Is standalone entity models used? Useful for entity disambiguation"
      supportSubEntities:
        type: "boolean"
        description: "Does this app support sub entities ?"

  IntentDefinition:
    type: "object"
    description: "An intent definition"
    required: [ "name", "namespace", "applications", "entities" ]
    properties:
      name:
        type: "string"
        description: "The name of the intent"
      namespace:
        type: "string"
        description: "The namespace of the intent"
      category:
        type: "string"
        description: "The category of the intent"
      _id:
        type: "string"
        description: "Technical identifier"
      applications:
        type: "array"
        description: "The application ids using this intent"
        items:
          type: "string"
      entities:
        type: "array"
        description: "The entity definitions of the intent"
        items:
          $ref: "#/definitions/EntityDefinition"
      mandatoryStates:
        type: "array"
        description: "The optional mandatory states"
        items:
          type: "string"
      sharedIntents:
        type: "array"
        description: "The optional shared intents names"
        items:
          type: "string"

  EntityDefinition:
    type: "object"
    description: "An entity definition"
    required: [ "entityTypeName", "role"]
    properties:
      entityTypeName:
        type: "string"
        description: "The qualified name of the entity type"
      role:
        type: "string"
        description: "The role"
      atStartOfDay:
        type: "boolean"
        description: "To evaluate time for entity date types"

externalDocs:
  description: "Tock Home"
  url: "https://doc.tock.ai/"