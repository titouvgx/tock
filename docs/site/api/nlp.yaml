openapi: "3.0.0"
info:
  description: "This is the Tock NLP API. You can parse text with it!"
  version: "20.9"
  title: "Tock NLP API"
  termsOfService: "https://doc.tock.ai"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "_HOST_"
basePath: "/rest/nlp"
tags:
  - name: "Nlp"
    description: "Analyse text"
schemes:
  - "http"
  - "https"
paths:
  /parse:
    post:
      tags:
        - "Nlp"
      summary: "parse a sentence"
      description: "You can pass a list of sentences for STT use cases"
      operationId: "parse"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Query"
          required: true
          schema:
            $ref: "#/definitions/NlpQuery"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/NlpResult"
        400:
          description: "Invalid query"
        500:
          description: "Internal server error"

definitions:
  NlpQuery:
    example:
      queries: [ "Text to parse" ]
      namespace: "app"
      applicationName: "app"
      context:
        language: "en"
    type: "object"
    required: [ "queries", "namespace", "applicationName", "context" ]
    properties:
      queries:
        type: "array"
        description: "A list of queries to parse. Usually there is only one element in the list, but some STT engines provides alternatives"
        items:
          type: "string"
      namespace:
        type: "string"
        description: "The namespace of the application"
      applicationName:
        type: "string"
        description: "The name of the application"
      context:
        type: "object"
        description: "The context of the query"
        required: [ "language" ]
        properties:
          language:
            type: "string"
            description: "The language of the query"
          clientId:
            type: "string"
            description: "The unique client identifier"
          dialogId:
            type: "string"
            description: "The dialog identifier"
          clientDevice:
            type: "string"
            description: "The optional client device"
          referenceDate:
            type: "string"
            format: "date-time"
            description: "The reference date used to parse the query"
          referenceTimezone:
            type: "string"
            description: "The user timezone"
          test:
            type: "boolean"
            description: "Is it a non regression test?"
          registerQuery:
            type: "boolean"
            description: "Should the query be saved in the dataset if not already present?"
          checkExistingQuery:
            type: "boolean"
            description: "If a query is already validated in the model, returns directly the result without using the NLP model if true"
          increaseQueryCounter:
            type: "boolean"
            description: "Add this query in built-in stats"
      state:
        type: "object"
        description: "The state of the query"
        properties:
          states:
            type: "array"
            items:
              type: "string"
      intentsSubset:
        type: "array"
        description: "The query is restricted to the specified intents only. If the set is empty, all intents of the application are allowed."
        items:
          $ref: "#/definitions/IntentQualifier"
  NlpResult:
    type: "object"
    required: [ "intent", "intentNamespace", "language", "retainedQuery" ]
    properties:
      intent:
        type: "string"
        description: "The intent selected"
      intentNamespace:
        type: "string"
        description: "The namespace of the selected intent"
      language:
        type: "string"
        description: "The language selected"
      entities:
        type: "array"
        description: "The selected entities"
        items:
          $ref: "#/definitions/EntityValue"
      notRetainedEntities:
        type: "array"
        description: "The entities found but not retained"
        items:
          $ref: "#/definitions/EntityValue"
      intentProbability:
        type: "number"
        description: "The intent evaluated probability"
      entitiesProbability:
        type: "number"
        description: "The average entity evaluation probability"
      retainedQuery:
        type: "string"
        description: "The analysed query"
      otherIntentsProbabilities:
        type: object
        description: "Other intents with significant probabilities"
        additionalProperties:
          type: "number"

  EntityValue:
    type: "object"
    description: "An entity value"
    properties:
      start:
        type: "integer"
        description: "Start (inclusive) text index of the entity"
      end:
        type: "integer"
        description: "End (exclusive) text index of the entity"
      entity:
        $ref: "#/definitions/Entity"
        description: "Entity definition"
      value:
        type: "object"
        description: "Current value if evaluated"
      evaluated:
        type: "boolean"
        description: "Is this entity has been evaluated ?"
      subEntities:
        type: "array"
        description: "Sub entities if any"
        items:
          $ref: "#/definitions/EntityValue"
      probability:
        type: "number"
        description: "Recognition probability"
      mergeSupport:
        type: "boolean"
        description: "Does this entity value support merge with other values ?"

  Entity:
    type: "object"
    description: "An entity definition"
    properties:
      entityType:
        type: "object"
        description: "Entity type definition"
        properties:
          name:
            type: "string"
            description: "The qualified name of the entity (ie namespace:name)"
          subEntities:
            type: "array"
            description: "The sub entities of this entity if any"
            items:
              $ref: "#/definitions/Entity"
          dictionary:
            type: "boolean"
            description: "true if contains dictionary of values"
      role:
        type: "string"
        description: "Role of the entity"

  PredefinedValue:
    type: "object"
    description: "Used to deal with entities composed of a predefined list of values"
    properties:
      value:
        type: "string"
        description: "The reference value"
      labels:
        type: "object"
        description: "The list of possible values for each locale"

  IntentQualifier:
    type: "object"
    required: [ "intent" ]
    properties:
      intent:
        type: "string"
        description: "the intent"
      modifier:
        type: "number"
        description: "The probability modifier. If positive, the probability of the intent is increased. If negative, the probability of the intent is decreased."
        default: 0.0

externalDocs:
  description: "Find out more about Tock"
  url: "https://theopenconversationkit.github.io/tock"
